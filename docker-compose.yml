version: '3.8'

services:

  api:
    build: .
    command: flask --app lyrics_analytics.api --debug run -h 0.0.0.0
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - RESULT_BACKEND=redis://redis:6379
      - BROKER_URL=amqp://guest:guest@rabbit:5672/
      - CACHE_HOST=redis
#      - DATABASE_URI=postgresql://user:pass@postgres:5432/lyrics_analytics
    ports:
      - "5000:5000"
    volumes:
      - .:/usr/src/app
    depends_on:
      - worker
      - redis
#      - postgres
    restart: always

  worker:
    build:
      context: .
    environment:
      - FLASK_APP=lyrics_analytics.api
      - RESULT_BACKEND=redis://redis:6379
      - BROKER_URL=amqp://guest:guest@rabbit:5672/
    volumes:
      - .:/usr/src/app
    command: celery -A lyrics_analytics.api.celery worker --loglevel=info
    depends_on:
      - redis
      - rabbit
#      - postgres

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis
    restart: always

  rabbit:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: always

#  postgres:
#    image: postgres
#    restart: always
#    environment:
#      POSTGRES_USER: user
#      POSTGRES_PASSWORD: pass
#      POSTGRES_DB: lyrics_analytics
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres-data:/var/lib/postgres

volumes:
  redis-data:
  rabbitmq-data:
#  postgres-data: