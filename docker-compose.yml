version: '3.8'

services:

  api:
    build: .
    command: flask --app lyrics_analytics.api --debug run -h 0.0.0.0
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    depends_on:
      - worker
      - redis
      - mongo
    restart: always

  worker:
    build:
      context: .
    env_file:
      - .env
    volumes:
      - .:/app
    command: celery -A lyrics_analytics.api.celery worker --loglevel=info
    restart: always
    depends_on:
      - redis
      - rabbit
      - mongo

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis
    restart: always

  rabbit:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=pass
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: always

  mongo:
      image: mongo
      restart: always
      environment:
        - MONGO_INITDB_ROOT_USERNAME=user
        - MONGO_INITDB_ROOT_PASSWORD=pass
      ports:
        - "27017:27017"
      volumes:
        - mongo-data:/var/lib/mongo

  mongo-express:
    image: mongo-express
    container_name: mexpress
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
      - ME_CONFIG_MONGODB_URL=mongodb://user:pass@mongo:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
    links:
      - mongo
    restart: unless-stopped
    ports:
      - "8081:8081"

volumes:
  redis-data:
  rabbitmq-data:
  mongo-data: